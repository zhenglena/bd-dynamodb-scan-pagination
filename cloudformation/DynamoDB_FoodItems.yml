Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: dynamodbAccessRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:*
              Resource: "*"
            - Effect: Allow
              Action:
              - logs:*
              Resource: "*"
  InitFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >
          const AWS = require("aws-sdk");
          const response = require('./cfn-response');
          const docClient = new AWS.DynamoDB.DocumentClient();
          exports.handler = function(event, context) {
              console.log(JSON.stringify(event,null,2));
               var params = {
                  RequestItems: {
                   "FoodItems": [
                     {
                      PutRequest: {
                       Item: {
                        id: "A014",
                        expirationDate: "12/17/2019",
                        foodName: "apples",
                        foodSection: "produce",
                        inventoryRemaining: 60,
                        restock: false
                       }
                      }
                     },
                     {
                      PutRequest: {
                       Item: {
                        id: "C912",
                        expirationDate: "12/10/2022",
                        foodName: "chicken noodle soup",
                        foodSection: "canned",
                        inventoryRemaining: 124,
                        restock: false
                       }
                      }
                     },
                     {
                      PutRequest: {
                       Item: {
                        id: "G0216",
                        expirationDate: "03/18/2020",
                        foodName: "green beans",
                        foodSection: "produce",
                        inventoryRemaining: 18,
                        restock: false
                       }
                      }
                     },
                     {
                      PutRequest: {
                       Item: {
                        id: "G129",
                        expirationDate: "12/11/2019",
                        foodName: "ground beef",
                        foodSection: "meat",
                        inventoryRemaining: 23,
                        restock: false
                       }
                      }
                     },
                     {
                      PutRequest: {
                       Item: {
                        id: "S426",
                        expirationDate: "12/15/2019",
                        foodName: "shrimp",
                        foodSection: "seafood",
                        inventoryRemaining: 73,
                        restock: false
                       }
                      }
                     },
                     {
                      PutRequest: {
                       Item: {
                        id: "S623",
                        expirationDate: "02/06/2020",
                        foodName: "steak",
                        foodSection: "meat",
                        inventoryRemaining: 63,
                        restock: false
                       }
                      }
                     }
                    ]
                  }
                 };
                 docClient.batchWrite(params, function(err, data) { if (err) {
                    response.send(event, context, "FAILED", {});
                  } else {
                    response.send(event, context, "SUCCESS", {});
                  }
                });
              };
      Handler: index.handler
      Role:
        Fn::GetAtt: [ LambdaRole , "Arn" ]
      Runtime: nodejs16.x
      Timeout: 60
  Unit5Lesson07DynamoDBFoodItems:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      BillingMode: PAY_PER_REQUEST
      TableName: "FoodItems"
  InitializeClubMembers:
    Type: Custom::InitFunction
    DependsOn: Unit5Lesson07DynamoDBFoodItems
    Properties:
      ServiceToken:
         Fn::GetAtt: [ InitFunction , "Arn" ]
      DynamoTableName:
        Ref: Unit5Lesson07DynamoDBFoodItems
